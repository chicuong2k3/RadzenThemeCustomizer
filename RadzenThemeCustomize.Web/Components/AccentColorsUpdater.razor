@using RadzenThemeCustomizer.Web
@inject LayoutEventService EventService
@inject ThemeManagerService ThemeManagerService
@implements IDisposable



<RadzenFieldset Text="Accent Color Palette">
    <RadzenRow>
        <RadzenColumn Size="12">
            <RadzenStack Gap="0">
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Base Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@baseColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Primary" Style="@GetPreviewStyle("rz-base")" Variant="Variant.Flat" ShowIcon="false" Title=".rz-base" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Primary Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@primaryColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Primary" Style="@GetPreviewStyle("rz-primary")" Variant="Variant.Flat" ShowIcon="false" Title=".rz-primary" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Secondary Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@secondaryColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Secondary" Style="@GetPreviewStyle("rz-secondary")" Variant="Variant.Flat" ShowIcon="false" Title=".rz-secondary" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Info Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@infoColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Info" Variant="Variant.Flat" Style="@GetPreviewStyle("rz-info")" ShowIcon="false" Title=".rz-info" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Success Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@successColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Success" Variant="Variant.Flat" Style="@GetPreviewStyle("rz-success")" ShowIcon="false" Title=".rz-success" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Warning Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@warningColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Warning" Variant="Variant.Flat" Style="@GetPreviewStyle("rz-warning")" ShowIcon="false" Title=".rz-warning" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center" Gap="4px">
                    <RadzenColumn Size="6">
                        <RadzenFormField Text="Danger Color" Style="width: 100%">
                            <RadzenColorPicker @bind-Value="@dangerColor" ShowColors="false" />
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6">
                        <RadzenAlert Size="AlertSize.ExtraSmall" AlertStyle="AlertStyle.Danger" Style="@GetPreviewStyle("rz-danger")" Variant="Variant.Flat" ShowIcon="false" Title=".rz-danger" AllowClose="false" />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
</RadzenFieldset>



@code {
    private string baseColor = string.Empty;
    private string primaryColor = string.Empty;
    private string secondaryColor = string.Empty;
    private string infoColor = string.Empty;
    private string successColor = string.Empty;
    private string warningColor = string.Empty;
    private string dangerColor = string.Empty;

    protected override void OnInitialized()
    {
        EventService.OnChangeTheme += RefreshThemeState;
    }

    private async Task RefreshThemeState()
    {
        var themeName = EventService.CurrentTheme;

        baseColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-base",
            ThemeName = themeName
        }) ?? string.Empty;

        primaryColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-primary",
            ThemeName = themeName
        }) ?? string.Empty;

        secondaryColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-secondary",
            ThemeName = themeName
        }) ?? string.Empty;

        infoColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-info",
            ThemeName = themeName
        }) ?? string.Empty;

        successColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-success",
            ThemeName = themeName
        }) ?? string.Empty;

        warningColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-warning",
            ThemeName = themeName
        }) ?? string.Empty;

        dangerColor = await ThemeManagerService.GetScssVariableAsync(new()
        {
            VariableName = "rz-danger",
            ThemeName = themeName
        }) ?? string.Empty;

        StateHasChanged();
    }


    private string GetPreviewStyle(string colorKey)
    {
        var color = colorKey switch
        {
            "rz-base" => baseColor,
            "rz-primary" => primaryColor,
            "rz-secondary" => secondaryColor,
            "rz-info" => infoColor,
            "rz-success" => successColor,
            "rz-warning" => warningColor,
            "rz-danger" => dangerColor,
            _ => "#ffffff"
        };
        return $"background-color: {color};";
    }

    public void Dispose()
    {
        EventService.OnChangeTheme -= RefreshThemeState;
    }

    public Dictionary<string, string> GetAccentColors()
    {
        return new Dictionary<string, string>
        {
            { "rz-base", baseColor },
            { "rz-primary", primaryColor },
            { "rz-secondary", secondaryColor },
            { "rz-info", infoColor },
            { "rz-success", successColor },
            { "rz-warning", warningColor },
            { "rz-danger", dangerColor }
        };
    }
}